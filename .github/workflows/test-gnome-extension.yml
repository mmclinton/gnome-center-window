name: Test GNOME Extension Compatibility

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || contains(github.event.head_commit.message, '[run-ci]')
    strategy:
      matrix:
        include:
          - gnome-version: 45
            fedora-tag: 39
          - gnome-version: 46
            fedora-tag: 40
          - gnome-version: 47
            fedora-tag: 41
          - gnome-version: 48
            fedora-tag: 42
          - gnome-version: 49
            fedora-tag: 43
    steps:
      - uses: actions/checkout@v4
      - name: Build Extension ZIP
        run: |
          glib-compile-schemas schemas/
          zip -r extension.zip metadata.json extension.js prefs.js schemas/
      - name: Build Custom Docker Image
        run: docker build --build-arg FEDORA_TAG=${{ matrix.fedora-tag }} -t gnome-test:${{ matrix.gnome-version }} -f Dockerfile .
      - name: Run Test in Container
        run: |
          docker run --rm -v $(pwd):/app --user root gnome-test:${{ matrix.gnome-version }} bash -c "
            Xvfb :99 -screen 0 1024x768x24 &
            export DISPLAY=:99
            dbus-launch --exit-with-session gnome-extensions install /app/extension.zip --force
            dbus-launch --exit-with-session gnome-extensions enable center-window@mmc
            dbus-run-session -- gnome-shell --nested --wayland --verbose > /tmp/shell.log 2>&1 &
            SHELL_PID=\$!
            sleep 15
            kill \$SHELL_PID
            wait \$SHELL_PID || true
            cat /tmp/shell.log
            if [ ! -f /tmp/shell.log ] || grep -iqE 'error|failed|crash|center-window@mmc failed' /tmp/shell.log; then
              echo 'Extension load failed - see logs'; exit 1;
            fi
          "
      - name: Upload Logs on Failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs-gnome-${{ matrix.gnome-version }}
          path: shell.log
